services:
  mysql:
    image: mysql:8.0
    container_name: ingredientserver-mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=IngredientServerDb
      - MYSQL_USER=ingredientuser
      - MYSQL_PASSWORD=${DB_PASSWORD}
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    networks:
      - internal-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_ROOT_PASSWORD}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  ingredientserver:
    image: ingredientserver:latest
    build:
      context: .
      dockerfile: IngredientServer/Dockerfile
    container_name: ingredientserver-app
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Server=mysql;Port=3306;Database=IngredientServerDb;User=ingredientuser;Password=${DB_PASSWORD};
      - JWT__Secret=${JWT_SECRET}
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - internal-network
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    image: nginx:alpine
    container_name: ingredientserver-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/nginx/certs:ro
    depends_on:
      - ingredientserver
    networks:
      - internal-network
    restart: unless-stopped

volumes:
  mysql_data:
    driver: local

networks:
  internal-network:
    driver: bridge
    internal: false