
# ============================================
# docker-compose.yml
# ============================================

version: '3.8'

services:
  mysql:
    image: mariadb:10.4
    container_name: ingredientserver-mariadb
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=IngredientServerDb
      - MYSQL_USER=ingredientuser
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - TZ=Asia/Ho_Chi_Minh
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    networks:
      - internal-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_ROOT_PASSWORD}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci

  # Init service để cấp quyền thư mục uploads
  init-permissions:
    image: alpine
    container_name: init-permissions
    volumes:
      - ./uploads:/uploads
      - ./logs:/logs
    command: ["sh", "-c", "chmod -R 777 /uploads /logs && chown -R 1000:1000 /uploads /logs"]
    networks:
      - internal-network

  ingredientserver:
    image: ingredientserver:latest
    build:
      context: .
      dockerfile: IngredientServer/Dockerfile
      args:
        BUILD_CONFIGURATION: Release
    container_name: ingredientserver-app
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      - TZ=Asia/Ho_Chi_Minh
      # Database Connection
      - ConnectionStrings__DefaultConnection=Server=mysql;Port=3306;Database=IngredientServerDb;User=ingredientuser;Password=${DB_PASSWORD};
      # JWT Configuration
      - JWT__Secret=${JWT_SECRET}
      - JWT__Issuer=${JWT_ISSUER:-IngredientServer}
      - JWT__Audience=${JWT_AUDIENCE:-IngredientServerApp}
      # OpenAI Configuration
      - OpenAI__ApiKey=${OPENAI_API_KEY}
      - OpenAI__Model=${OPENAI_MODEL:-gpt-4-turbo}
      # File Upload Configuration
      - FileUpload__MaxFileSize=${MAX_FILE_SIZE:-10485760}
      - FileUpload__AllowedExtensions=${ALLOWED_EXTENSIONS:-.jpg,.jpeg,.png,.gif}
    depends_on:
      mysql:
        condition: service_healthy
      init-permissions:
        condition: service_completed_successfully
    networks:
      - internal-network
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/wwwroot/uploads
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  nginx:
    image: nginx:alpine
    container_name: ingredientserver-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/nginx/certs:ro
      - ./uploads:/usr/share/nginx/html/uploads:ro
      - ./nginx-logs:/var/log/nginx
    depends_on:
      ingredientserver:
        condition: service_healthy
    networks:
      - internal-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mysql_data:
    driver: local

networks:
  internal-network:
    driver: bridge